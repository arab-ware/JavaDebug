package com.my.newproject52;

import android.app.Activity;
import android.app.AlertDialog.Builder;
import android.content.Intent;
import android.os.Bundle;
import android.util.SparseBooleanArray;
import android.util.TypedValue;
import android.view.View;
import android.widget.ListView;
import android.widget.Toast;
import java.util.ArrayList;
import java.util.Random;

public class DebugActivity extends Activity {
    private Builder dialog;
    private String madeErrMsg2 = "";

    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView(R.layout.debug);
        initialize(bundle);
        initializeLogic();
    }

    private void initialize(Bundle bundle) {
        this.dialog = new Builder(this);
    }

    /* JADX WARNING: inconsistent code. */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void initializeLogic() {
        /*
        r9 = this;
        r8 = 4;
        r7 = 3;
        r6 = 2;
        r5 = 1;
        r2 = 0;
        r1 = "";
        r0 = 5;
        r3 = new java.lang.String[r0];
        r0 = "StringIndexOutOfBoundsException";
        r3[r2] = r0;
        r0 = "IndexOutOfBoundsException";
        r3[r5] = r0;
        r0 = "ArithmeticException";
        r3[r6] = r0;
        r0 = "NumberFormatException";
        r3[r7] = r0;
        r0 = "ActivityNotFoundException";
        r3[r8] = r0;
        r0 = 5;
        r4 = new java.lang.String[r0];
        r0 = "Invalid string operation\n";
        r4[r2] = r0;
        r0 = "Invalid list operation\n";
        r4[r5] = r0;
        r0 = "Invalid arithmetical operation\n";
        r4[r6] = r0;
        r0 = "Invalid toNumber block operation\n";
        r4[r7] = r0;
        r0 = "Invalid intent operation";
        r4[r8] = r0;
        r0 = r9.getIntent();
        r5 = "";
        if (r0 == 0) goto L_0x00be;
    L_0x003d:
        r5 = "error";
        r0 = r0.getStringExtra(r5);
        r5 = "\n";
        r5 = r0.split(r5);
    L_0x0049:
        r6 = r3.length;	 Catch:{ Exception -> 0x00bb }
        if (r2 < r6) goto L_0x007b;
    L_0x004c:
        r2 = r1.isEmpty();	 Catch:{ Exception -> 0x00bb }
        if (r2 == 0) goto L_0x00be;
    L_0x0052:
        r9.madeErrMsg2 = r0;
        r0 = r9.dialog;
        r1 = "an error found";
        r0.setTitle(r1);
        r0 = r9.dialog;
        r1 = "dear user\nwe found a bug in this app\nplz contact the developer to solve it\nthanks";
        r0.setMessage(r1);
        r0 = r9.dialog;
        r1 = "copy error message";
        r2 = new com.my.newproject52.DebugActivity$1;
        r2.<init>();
        r0.setPositiveButton(r1, r2);
        r0 = r9.dialog;
        r1 = "exit";
        r2 = new com.my.newproject52.DebugActivity$2;
        r2.<init>();
        r0.setNegativeButton(r1, r2);
        return;
    L_0x007b:
        r6 = 0;
        r6 = r5[r6];	 Catch:{ Exception -> 0x00bb }
        r7 = r3[r2];	 Catch:{ Exception -> 0x00bb }
        r6 = r6.contains(r7);	 Catch:{ Exception -> 0x00bb }
        if (r6 == 0) goto L_0x00b8;
    L_0x0086:
        r1 = r4[r2];	 Catch:{ Exception -> 0x00bb }
        r4 = 0;
        r4 = r5[r4];	 Catch:{ Exception -> 0x00bb }
        r6 = r3[r2];	 Catch:{ Exception -> 0x00bb }
        r4 = r4.indexOf(r6);	 Catch:{ Exception -> 0x00bb }
        r2 = r3[r2];	 Catch:{ Exception -> 0x00bb }
        r2 = r2.length();	 Catch:{ Exception -> 0x00bb }
        r2 = r2 + r4;
        r3 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x00bb }
        r4 = java.lang.String.valueOf(r1);	 Catch:{ Exception -> 0x00bb }
        r3.<init>(r4);	 Catch:{ Exception -> 0x00bb }
        r4 = 0;
        r4 = r5[r4];	 Catch:{ Exception -> 0x00bb }
        r6 = 0;
        r5 = r5[r6];	 Catch:{ Exception -> 0x00bb }
        r5 = r5.length();	 Catch:{ Exception -> 0x00bb }
        r2 = r4.substring(r2, r5);	 Catch:{ Exception -> 0x00bb }
        r2 = r3.append(r2);	 Catch:{ Exception -> 0x00bb }
        r1 = r2.toString();	 Catch:{ Exception -> 0x00bb }
        goto L_0x004c;
    L_0x00b8:
        r2 = r2 + 1;
        goto L_0x0049;
    L_0x00bb:
        r0 = move-exception;
        r0 = r1;
        goto L_0x0052;
    L_0x00be:
        r0 = r1;
        goto L_0x0052;
        */
        throw new UnsupportedOperationException("Method not decompiled: com.my.newproject52.DebugActivity.initializeLogic():void");
    }

    protected void onActivityResult(int i, int i2, Intent intent) {
        super.onActivityResult(i, i2, intent);
    }

    @Deprecated
    public void showMessage(String str) {
        Toast.makeText(getApplicationContext(), str, 0).show();
    }

    @Deprecated
    public int getLocationX(View view) {
        int[] iArr = new int[2];
        view.getLocationInWindow(iArr);
        return iArr[0];
    }

    @Deprecated
    public int getLocationY(View view) {
        int[] iArr = new int[2];
        view.getLocationInWindow(iArr);
        return iArr[1];
    }

    @Deprecated
    public int getRandom(int i, int i2) {
        return new Random().nextInt((i2 - i) + 1) + i;
    }

    @Deprecated
    public ArrayList<Double> getCheckedItemPositionsToArray(ListView listView) {
        ArrayList<Double> arrayList = new ArrayList();
        SparseBooleanArray checkedItemPositions = listView.getCheckedItemPositions();
        for (int i = 0; i < checkedItemPositions.size(); i++) {
            if (checkedItemPositions.valueAt(i)) {
                arrayList.add(Double.valueOf((double) checkedItemPositions.keyAt(i)));
            }
        }
        return arrayList;
    }

    @Deprecated
    public float getDip(int i) {
        return TypedValue.applyDimension(1, (float) i, getResources().getDisplayMetrics());
    }

    @Deprecated
    public int getDisplayWidthPixels() {
        return getResources().getDisplayMetrics().widthPixels;
    }

    @Deprecated
    public int getDisplayHeightPixels() {
        return getResources().getDisplayMetrics().heightPixels;
    }
}
